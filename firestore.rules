rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function signedIn() { return request.auth != null; }

    function isAdmin() {
      return signedIn() &&
        get(/databases/$(database)/documents/admins/$(request.auth.uid))
          .data.role in ['owner', 'admin'];
    }

    // Bloqueo por defecto
    match /{document=**} { allow read, write: if false; }

    // ---- admins ----
    match /admins/{uid} {
      allow read: if signedIn() && request.auth.uid == uid;
      allow write: if false;
    }

    // ---- ambassadors_master ----
    // Permitimos leer su propia ficha cuando el email del token coincide
    // con el campo 'email' del documento (no dependemos del ID del doc).
    match /ambassadors_master/{docId} {
      allow read: if isAdmin()
                  || (signedIn()
                      && request.auth.token.email != null
                      && resource.data.email == request.auth.token.email);
      allow create, update, delete: if isAdmin();
    }

    // ---- settings (opcional) ----
    match /settings/{doc} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // ---- embajadores (legacy) ----
    match /embajadores/{doc} {
      allow read, write: if isAdmin();
    }
  }
}
